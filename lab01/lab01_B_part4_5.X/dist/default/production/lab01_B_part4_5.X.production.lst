

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Mar 17 18:06:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F26K20 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63 ;; Function _EUSART_Deinitialize is unused but had its address taken
    64   000000                     
    65 ;; Function _EUSART_TransmitEnable is unused but had its address taken
    66   000000                     
    67 ;; Function _EUSART_TransmitDisable is unused but had its address taken
    68   000000                     
    69 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
    70   000000                     
    71 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
    72   000000                     
    73 ;; Function _EUSART_IsRxReady is unused but had its address taken
    74   000000                     
    75 ;; Function _EUSART_IsTxReady is unused but had its address taken
    76   000000                     
    77 ;; Function _EUSART_IsTxDone is unused but had its address taken
    78   000000                     
    79 ;; Function _EUSART_ErrorGet is unused but had its address taken
    80   000000                     
    81 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    82   000000                     
    83 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    84   000000                     
    85 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    86   000000                     
    87                           	psect	smallconst
    88   001000                     __psmallconst:
    89                           	callstack 0
    90   001000  00                 	db	0
    91   001001                     _UART1:
    92                           	callstack 0
    93   001001  10                 	db	low _EUSART_Initialize
    94   001002  11                 	db	high _EUSART_Initialize
    95   001003  00                 	db	0
    96   001004  00                 	db	0
    97   001005  32                 	db	low _EUSART_Read
    98   001006  10                 	db	high _EUSART_Read
    99   001007  24                 	db	low _EUSART_Write
   100   001008  12                 	db	high _EUSART_Write
   101   001009  00                 	db	0
   102   00100A  00                 	db	0
   103   00100B  00                 	db	0
   104   00100C  00                 	db	0
   105   00100D  00                 	db	0
   106   00100E  00                 	db	0
   107   00100F  00                 	db	0
   108   001010  00                 	db	0
   109   001011  00                 	db	0
   110   001012  00                 	db	0
   111   001013  00                 	db	0
   112   001014  00                 	db	0
   113   001015  00                 	db	0
   114   001016  00                 	db	0
   115   001017  00                 	db	0
   116   001018  00                 	db	0
   117   001019  00                 	db	0
   118   00101A  00                 	db	0
   119   00101B  00                 	db	0
   120   00101C  00                 	db	0
   121   00101D  00                 	db	0
   122   00101E  00                 	db	0
   123   00101F  00                 	db	0
   124   001020  00                 	db	0
   125   001021  00                 	db	0
   126   001022  00                 	db	0
   127   001023  00                 	db	0
   128   001024  00                 	db	0
   129   001025  00                 	db	0
   130   001026  00                 	db	0
   131   001027  00                 	db	0
   132   001028  00                 	db	0
   133   001029  BC                 	db	low _EUSART_FramingErrorCallbackRegister
   134   00102A  11                 	db	high _EUSART_FramingErrorCallbackRegister
   135   00102B  A0                 	db	low _EUSART_OverrunErrorCallbackRegister
   136   00102C  11                 	db	high _EUSART_OverrunErrorCallbackRegister
   137   00102D  00                 	db	0
   138   00102E  00                 	db	0
   139   00102F  00                 	db	0
   140   001030  00                 	db	0
   141   001031                     __end_of_UART1:
   142                           	callstack 0
   143   000000                     _TXREG	set	4013
   144   000000                     _RCREG	set	4014
   145   000000                     _SPBRG	set	4015
   146   000000                     _TXSTA	set	4012
   147   000000                     _BAUDCONbits	set	4024
   148   000000                     _TXSTAbits	set	4012
   149   000000                     _RCSTAbits	set	4011
   150   000000                     _LATB	set	3978
   151   000000                     _WPUB	set	3964
   152   000000                     _ANSELH	set	3967
   153   000000                     _LATA	set	3977
   154   000000                     _LATBbits	set	3978
   155   000000                     _TRISA	set	3986
   156   000000                     _LATC	set	3979
   157   000000                     _OSCTUNE	set	3995
   158   000000                     _PIR1bits	set	3998
   159   000000                     _RCSTA	set	4011
   160   000000                     _BAUDCON	set	4024
   161   000000                     _INTCONbits	set	4082
   162   000000                     _TRISC	set	3988
   163   000000                     _TRISB	set	3987
   164   000000                     _IOCB	set	3965
   165   000000                     _RCONbits	set	4048
   166   000000                     _SPBRGH	set	4016
   167   000000                     _OSCCON	set	4051
   168   000000                     _INTCON3bits	set	4080
   169   000000                     _INTCON2bits	set	4081
   170   001031  00                 	db	0	; dummy byte at the end
   171   000000                     
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175   0011D8                     __pcinit:
   176                           	callstack 0
   177   0011D8                     start_initialization:
   178                           	callstack 0
   179   0011D8                     __initialization:
   180                           	callstack 0
   181                           
   182                           ; Clear objects allocated to COMRAM (13 bytes)
   183   0011D8  EE00  F001         	lfsr	0,__pbssCOMRAM
   184   0011DC  0E0D               	movlw	13
   185   0011DE                     clear_0:
   186   0011DE  6AEE               	clrf	postinc0,c
   187   0011E0  06E8               	decf	wreg,f,c
   188   0011E2  E1FD               	bnz	clear_0
   189   0011E4                     end_of_initialization:
   190                           	callstack 0
   191   0011E4                     __end_of__initialization:
   192                           	callstack 0
   193   0011E4  0100               	movlb	0
   194   0011E6  EF59  F008         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197   000001                     __pbssCOMRAM:
   198                           	callstack 0
   199   000001                     _INT2_InterruptHandler:
   200                           	callstack 0
   201   000001                     	ds	2
   202   000003                     _INT1_InterruptHandler:
   203                           	callstack 0
   204   000003                     	ds	2
   205   000005                     _INT0_InterruptHandler:
   206                           	callstack 0
   207   000005                     	ds	2
   208   000007                     _EUSART_OverrunErrorHandler:
   209                           	callstack 0
   210   000007                     	ds	2
   211   000009                     _EUSART_FramingErrorHandler:
   212                           	callstack 0
   213   000009                     	ds	2
   214   00000B                     _eusartRxLastError:
   215                           	callstack 0
   216   00000B                     	ds	2
   217   00000D                     _data:
   218                           	callstack 0
   219   00000D                     	ds	1
   220                           
   221                           	psect	cstackCOMRAM
   222   00000E                     __pcstackCOMRAM:
   223                           	callstack 0
   224   00000E                     EUSART_Write@txData:
   225                           	callstack 0
   226   00000E                     EUSART_FramingErrorCallbackRegister@callbackHandler:
   227                           	callstack 0
   228   00000E                     EUSART_OverrunErrorCallbackRegister@callbackHandler:
   229                           	callstack 0
   230   00000E                     INT0_SetInterruptHandler@InterruptHandler:
   231                           	callstack 0
   232   00000E                     INT1_SetInterruptHandler@InterruptHandler:
   233                           	callstack 0
   234   00000E                     INT2_SetInterruptHandler@InterruptHandler:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238   00000E                     	ds	2
   239   000010                     
   240                           ; 1 bytes @ 0x2
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 49 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels required when called: 3
   266 ;; This function calls:
   267 ;;		_EUSART_Read
   268 ;;		_EUSART_Write
   269 ;;		_SYSTEM_Initialize
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text0
   276   0010B2                     __ptext0:
   277                           	callstack 0
   278   0010B2                     _main:
   279                           	callstack 28
   280   0010B2                     
   281                           ;main.c: 52:     SYSTEM_Initialize();
   282   0010B2  ECF5  F008         	call	_SYSTEM_Initialize	;wreg free
   283   0010B6                     
   284                           ;main.c: 73:     EUSART_Write('a');
   285   0010B6  0E61               	movlw	97
   286   0010B8  EC12  F009         	call	_EUSART_Write
   287   0010BC                     
   288                           ;main.c: 74:     EUSART_Write('a');
   289   0010BC  0E61               	movlw	97
   290   0010BE  EC12  F009         	call	_EUSART_Write
   291   0010C2                     
   292                           ;main.c: 75:     EUSART_Write('a');
   293   0010C2  0E61               	movlw	97
   294   0010C4  EC12  F009         	call	_EUSART_Write
   295   0010C8                     l1264:
   296                           
   297                           ;main.c: 83:     {;main.c: 85:         data=EUSART_Read();
   298   0010C8  EC19  F008         	call	_EUSART_Read	;wreg free
   299   0010CC  6E0D               	movwf	_data^0,c
   300                           
   301                           ;main.c: 88:         switch (data) {
   302   0010CE  EF77  F008         	goto	l1268
   303   0010D2                     l24:
   304   0010D2  808A               	bsf	138,0,c	;volatile
   305   0010D4  EF64  F008         	goto	l1264
   306   0010D8                     l28:
   307   0010D8  828A               	bsf	138,1,c	;volatile
   308   0010DA  EF64  F008         	goto	l1264
   309   0010DE                     l31:
   310   0010DE  848A               	bsf	138,2,c	;volatile
   311   0010E0  EF64  F008         	goto	l1264
   312   0010E4                     l34:
   313   0010E4  908A               	bcf	138,0,c	;volatile
   314   0010E6  928A               	bcf	138,1,c	;volatile
   315   0010E8  948A               	bcf	138,2,c	;volatile
   316   0010EA  EF64  F008         	goto	l1264
   317   0010EE                     l1268:
   318   0010EE  500D               	movf	_data^0,w,c
   319                           
   320                           ; Switch size 1, requested type "simple"
   321                           ; Number of cases is 3, Range of values is 49 to 51
   322                           ; switch strategies available:
   323                           ; Name         Instructions Cycles
   324                           ; simple_byte           10     6 (average)
   325                           ;	Chosen strategy is simple_byte
   326   0010F0  0A31               	xorlw	49	; case 49
   327   0010F2  B4D8               	btfsc	status,2,c
   328   0010F4  EF69  F008         	goto	l24
   329   0010F8  0A03               	xorlw	3	; case 50
   330   0010FA  B4D8               	btfsc	status,2,c
   331   0010FC  EF6C  F008         	goto	l28
   332   001100  0A01               	xorlw	1	; case 51
   333   001102  B4D8               	btfsc	status,2,c
   334   001104  EF6F  F008         	goto	l31
   335   001108  EF72  F008         	goto	l34
   336   00110C  EF00  F000         	goto	start
   337   001110                     __end_of_main:
   338                           	callstack 0
   339                           
   340 ;; *************** function _SYSTEM_Initialize *****************
   341 ;; Defined at:
   342 ;;		line 37 in file "mcc_generated_files/system/src/system.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; Hardware stack levels required when called: 2
   363 ;; This function calls:
   364 ;;		_CLOCK_Initialize
   365 ;;		_EUSART_Initialize
   366 ;;		_INTERRUPT_Initialize
   367 ;;		_PIN_MANAGER_Initialize
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text1
   374   0011EA                     __ptext1:
   375                           	callstack 0
   376   0011EA                     _SYSTEM_Initialize:
   377                           	callstack 28
   378   0011EA                     
   379                           ;mcc_generated_files/system/src/system.c: 39:     CLOCK_Initialize();
   380   0011EA  EC0D  F009         	call	_CLOCK_Initialize	;wreg free
   381                           
   382                           ;mcc_generated_files/system/src/system.c: 40:     PIN_MANAGER_Initialize();
   383   0011EE  ECBD  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   384   0011F2                     
   385                           ;mcc_generated_files/system/src/system.c: 41:     EUSART_Initialize();
   386   0011F2  EC88  F008         	call	_EUSART_Initialize	;wreg free
   387   0011F6                     
   388                           ;mcc_generated_files/system/src/system.c: 42:     INTERRUPT_Initialize();
   389   0011F6  ECA3  F008         	call	_INTERRUPT_Initialize	;wreg free
   390   0011FA  0012               	return		;funcret
   391   0011FC                     __end_of_SYSTEM_Initialize:
   392                           	callstack 0
   393                           
   394 ;; *************** function _PIN_MANAGER_Initialize *****************
   395 ;; Defined at:
   396 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_SYSTEM_Initialize
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text2
   424   00117A                     __ptext2:
   425                           	callstack 0
   426   00117A                     _PIN_MANAGER_Initialize:
   427                           	callstack 29
   428   00117A                     
   429                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
   430   00117A  0E00               	movlw	0
   431   00117C  6E89               	movwf	137,c	;volatile
   432                           
   433                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
   434   00117E  0E00               	movlw	0
   435   001180  6E8A               	movwf	138,c	;volatile
   436                           
   437                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
   438   001182  0E00               	movlw	0
   439   001184  6E8B               	movwf	139,c	;volatile
   440   001186                     
   441                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0xFF;
   442   001186  6892               	setf	146,c	;volatile
   443                           
   444                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF8;
   445   001188  0EF8               	movlw	248
   446   00118A  6E93               	movwf	147,c	;volatile
   447                           
   448                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xBF;
   449   00118C  0EBF               	movlw	191
   450   00118E  6E94               	movwf	148,c	;volatile
   451                           
   452                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELH = 0x1F;
   453   001190  0E1F               	movlw	31
   454   001192  6E7F               	movwf	127,c	;volatile
   455                           
   456                           ;mcc_generated_files/system/src/pins.c: 62:     WPUB = 0xF8;
   457   001194  0EF8               	movlw	248
   458   001196  6E7C               	movwf	124,c	;volatile
   459                           
   460                           ;mcc_generated_files/system/src/pins.c: 86:     IOCB = 0x0;
   461   001198  0E00               	movlw	0
   462   00119A  6E7D               	movwf	125,c	;volatile
   463   00119C                     
   464                           ;mcc_generated_files/system/src/pins.c: 90:     INTCONbits.RBIE = 1;
   465   00119C  86F2               	bsf	242,3,c	;volatile
   466   00119E  0012               	return		;funcret
   467   0011A0                     __end_of_PIN_MANAGER_Initialize:
   468                           	callstack 0
   469                           
   470 ;; *************** function _INTERRUPT_Initialize *****************
   471 ;; Defined at:
   472 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;Total ram usage:        0 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; Hardware stack levels required when called: 1
   493 ;; This function calls:
   494 ;;		_INT0_SetInterruptHandler
   495 ;;		_INT1_SetInterruptHandler
   496 ;;		_INT2_SetInterruptHandler
   497 ;; This function is called by:
   498 ;;		_SYSTEM_Initialize
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text3
   503   001146                     __ptext3:
   504                           	callstack 0
   505   001146                     _INTERRUPT_Initialize:
   506                           	callstack 28
   507   001146                     
   508                           ;mcc_generated_files/system/src/interrupt.c: 45:     RCONbits.IPEN = 0;
   509   001146  9ED0               	bcf	208,7,c	;volatile
   510                           
   511                           ;mcc_generated_files/system/src/interrupt.c: 49:     (INTCONbits.INT0IF = 0);
   512   001148  92F2               	bcf	242,1,c	;volatile
   513                           
   514                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON2bits.INTEDG0 = 1);
   515   00114A  8CF1               	bsf	241,6,c	;volatile
   516   00114C                     
   517                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
   518   00114C  0E00               	movlw	0
   519   00114E  6E0E               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
   520   001150  0E00               	movlw	0
   521   001152  6E0F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
   522   001154  EC08  F009         	call	_INT0_SetInterruptHandler	;wreg free
   523   001158                     
   524                           ;mcc_generated_files/system/src/interrupt.c: 57:     (INTCON3bits.INT1IF = 0);
   525   001158  90F0               	bcf	240,0,c	;volatile
   526   00115A                     
   527                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON2bits.INTEDG1 = 1);
   528   00115A  8AF1               	bsf	241,5,c	;volatile
   529                           
   530                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
   531   00115C  0E00               	movlw	0
   532   00115E  6E0E               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
   533   001160  0E00               	movlw	0
   534   001162  6E0F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
   535   001164  EC03  F009         	call	_INT1_SetInterruptHandler	;wreg free
   536   001168                     
   537                           ;mcc_generated_files/system/src/interrupt.c: 65:     (INTCON3bits.INT2IF = 0);
   538   001168  92F0               	bcf	240,1,c	;volatile
   539   00116A                     
   540                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON2bits.INTEDG2 = 1);
   541   00116A  88F1               	bsf	241,4,c	;volatile
   542                           
   543                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
   544   00116C  0E00               	movlw	0
   545   00116E  6E0E               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
   546   001170  0E00               	movlw	0
   547   001172  6E0F               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
   548   001174  ECFE  F008         	call	_INT2_SetInterruptHandler	;wreg free
   549   001178  0012               	return		;funcret
   550   00117A                     __end_of_INTERRUPT_Initialize:
   551                           	callstack 0
   552                           
   553 ;; *************** function _INT2_SetInterruptHandler *****************
   554 ;; Defined at:
   555 ;;		line 144 in file "mcc_generated_files/system/src/interrupt.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   558 ;;		 -> INT2_DefaultInterruptHandler(1), 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        2 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_INTERRUPT_Initialize
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text4
   584   0011FC                     __ptext4:
   585                           	callstack 0
   586   0011FC                     _INT2_SetInterruptHandler:
   587                           	callstack 28
   588   0011FC                     
   589                           ;mcc_generated_files/system/src/interrupt.c: 145:     INT2_InterruptHandler = InterruptH
      +                          andler;
   590   0011FC  C00E  F001         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   591   001200  C00F  F002         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   592   001204  0012               	return		;funcret
   593   001206                     __end_of_INT2_SetInterruptHandler:
   594                           	callstack 0
   595                           
   596 ;; *************** function _INT1_SetInterruptHandler *****************
   597 ;; Defined at:
   598 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   601 ;;		 -> INT1_DefaultInterruptHandler(1), 
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;Total ram usage:        2 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_INTERRUPT_Initialize
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text5
   627   001206                     __ptext5:
   628                           	callstack 0
   629   001206                     _INT1_SetInterruptHandler:
   630                           	callstack 28
   631   001206                     
   632                           ;mcc_generated_files/system/src/interrupt.c: 119:     INT1_InterruptHandler = InterruptH
      +                          andler;
   633   001206  C00E  F003         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   634   00120A  C00F  F004         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   635   00120E  0012               	return		;funcret
   636   001210                     __end_of_INT1_SetInterruptHandler:
   637                           	callstack 0
   638                           
   639 ;; *************** function _INT0_SetInterruptHandler *****************
   640 ;; Defined at:
   641 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   644 ;;		 -> INT0_DefaultInterruptHandler(1), 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_INTERRUPT_Initialize
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text6
   670   001210                     __ptext6:
   671                           	callstack 0
   672   001210                     _INT0_SetInterruptHandler:
   673                           	callstack 28
   674   001210                     
   675                           ;mcc_generated_files/system/src/interrupt.c: 93:     INT0_InterruptHandler = InterruptHa
      +                          ndler;
   676   001210  C00E  F005         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
   677   001214  C00F  F006         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
   678   001218  0012               	return		;funcret
   679   00121A                     __end_of_INT0_SetInterruptHandler:
   680                           	callstack 0
   681                           
   682 ;; *************** function _EUSART_Initialize *****************
   683 ;; Defined at:
   684 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 1
   705 ;; This function calls:
   706 ;;		_EUSART_FramingErrorCallbackRegister
   707 ;;		_EUSART_OverrunErrorCallbackRegister
   708 ;; This function is called by:
   709 ;;		_SYSTEM_Initialize
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text7
   714   001110                     __ptext7:
   715                           	callstack 0
   716   001110                     _EUSART_Initialize:
   717                           	callstack 28
   718   001110                     
   719                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUDCON = 0x48;
   720   001110  0E48               	movlw	72
   721   001112  6EB8               	movwf	184,c	;volatile
   722                           
   723                           ;mcc_generated_files/uart/src/eusart.c: 101:     RCSTA = 0x90;
   724   001114  0E90               	movlw	144
   725   001116  6EAB               	movwf	171,c	;volatile
   726                           
   727                           ;mcc_generated_files/uart/src/eusart.c: 103:     TXSTA = 0x26;
   728   001118  0E26               	movlw	38
   729   00111A  6EAC               	movwf	172,c	;volatile
   730                           
   731                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRG = 0xCF;
   732   00111C  0ECF               	movlw	207
   733   00111E  6EAF               	movwf	175,c	;volatile
   734                           
   735                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x0;
   736   001120  0E00               	movlw	0
   737   001122  6EB0               	movwf	176,c	;volatile
   738   001124                     
   739                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
   740   001124  0E32               	movlw	low _EUSART_DefaultFramingErrorCallback
   741   001126  6E0E               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^0,c
   742   001128  0E12               	movlw	high _EUSART_DefaultFramingErrorCallback
   743   00112A  6E0F               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^0,c
   744   00112C  ECDE  F008         	call	_EUSART_FramingErrorCallbackRegister	;wreg free
   745   001130                     
   746                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
   747   001130  0E2C               	movlw	low _EUSART_DefaultOverrunErrorCallback
   748   001132  6E0E               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^0,c
   749   001134  0E12               	movlw	high _EUSART_DefaultOverrunErrorCallback
   750   001136  6E0F               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
   751   001138  ECD0  F008         	call	_EUSART_OverrunErrorCallbackRegister	;wreg free
   752                           
   753                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
   754   00113C  0E00               	movlw	0
   755   00113E  6E0C               	movwf	(_eusartRxLastError+1)^0,c	;volatile
   756   001140  0E00               	movlw	0
   757   001142  6E0B               	movwf	_eusartRxLastError^0,c	;volatile
   758   001144  0012               	return		;funcret
   759   001146                     __end_of_EUSART_Initialize:
   760                           	callstack 0
   761                           
   762 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
   763 ;; Defined at:
   764 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  callbackHand    2    0[COMRAM] PTR FTN()void 
   767 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;Total ram usage:        2 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_EUSART_Initialize
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text8
   793   0011A0                     __ptext8:
   794                           	callstack 0
   795   0011A0                     _EUSART_OverrunErrorCallbackRegister:
   796                           	callstack 28
   797   0011A0                     
   798                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if((0) != callbackHandler)
   799   0011A0  500E               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^0,w,c
   800   0011A2  100F               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
   801   0011A4  B4D8               	btfsc	status,2,c
   802   0011A6  EFD7  F008         	goto	u201
   803   0011AA  EFD9  F008         	goto	u200
   804   0011AE                     u201:
   805   0011AE  EFDD  F008         	goto	l223
   806   0011B2                     u200:
   807   0011B2                     
   808                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
   809   0011B2  C00E  F007         	movff	EUSART_OverrunErrorCallbackRegister@callbackHandler,_EUSART_OverrunErrorHandler
   810   0011B6  C00F  F008         	movff	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART_OverrunErrorHandler
      +                          +1
   811   0011BA                     l223:
   812   0011BA  0012               	return		;funcret
   813   0011BC                     __end_of_EUSART_OverrunErrorCallbackRegister:
   814                           	callstack 0
   815                           
   816 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
   817 ;; Defined at:
   818 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  callbackHand    2    0[COMRAM] PTR FTN()void 
   821 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_EUSART_Initialize
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text9
   847   0011BC                     __ptext9:
   848                           	callstack 0
   849   0011BC                     _EUSART_FramingErrorCallbackRegister:
   850                           	callstack 28
   851   0011BC                     
   852                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if((0) != callbackHandler)
   853   0011BC  500E               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^0,w,c
   854   0011BE  100F               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
   855   0011C0  B4D8               	btfsc	status,2,c
   856   0011C2  EFE5  F008         	goto	u191
   857   0011C6  EFE7  F008         	goto	u190
   858   0011CA                     u191:
   859   0011CA  EFEB  F008         	goto	l219
   860   0011CE                     u190:
   861   0011CE                     
   862                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
   863   0011CE  C00E  F009         	movff	EUSART_FramingErrorCallbackRegister@callbackHandler,_EUSART_FramingErrorHandler
   864   0011D2  C00F  F00A         	movff	EUSART_FramingErrorCallbackRegister@callbackHandler+1,_EUSART_FramingErrorHandler
      +                          +1
   865   0011D6                     l219:
   866   0011D6  0012               	return		;funcret
   867   0011D8                     __end_of_EUSART_FramingErrorCallbackRegister:
   868                           	callstack 0
   869                           
   870 ;; *************** function _CLOCK_Initialize *****************
   871 ;; Defined at:
   872 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;Total ram usage:        0 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_SYSTEM_Initialize
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text10
   900   00121A                     __ptext10:
   901                           	callstack 0
   902   00121A                     _CLOCK_Initialize:
   903                           	callstack 29
   904   00121A                     
   905                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = 0x62;
   906   00121A  0E62               	movlw	98
   907   00121C  6ED3               	movwf	211,c	;volatile
   908                           
   909                           ;mcc_generated_files/system/src/clock.c: 43:     OSCTUNE = 0x0;
   910   00121E  0E00               	movlw	0
   911   001220  6E9B               	movwf	155,c	;volatile
   912   001222  0012               	return		;funcret
   913   001224                     __end_of_CLOCK_Initialize:
   914                           	callstack 0
   915                           
   916 ;; *************** function _EUSART_Write *****************
   917 ;; Defined at:
   918 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  txData          1    wreg     unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  txData          1    0[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;Total ram usage:        1 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_main
   942 ;;		_send_string
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text11
   947   001224                     __ptext11:
   948                           	callstack 0
   949   001224                     _EUSART_Write:
   950                           	callstack 30
   951                           
   952                           ;incstack = 0
   953                           ;EUSART_Write@txData stored from wreg
   954   001224  6E0E               	movwf	EUSART_Write@txData^0,c
   955   001226                     
   956                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TXR
      +                          EG = txData;
   957   001226  C00E  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   958   00122A  0012               	return		;funcret
   959   00122C                     __end_of_EUSART_Write:
   960                           	callstack 0
   961                           
   962 ;; *************** function _EUSART_Read *****************
   963 ;; Defined at:
   964 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      unsigned char 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 1
   985 ;; This function calls:
   986 ;;		NULL
   987 ;;		_EUSART_DefaultFramingErrorCallback
   988 ;;		_EUSART_DefaultOverrunErrorCallback
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text12
   995   001032                     __ptext12:
   996                           	callstack 0
   997   001032                     _EUSART_Read:
   998                           	callstack 29
   999   001032                     
  1000                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
  1001   001032  0E00               	movlw	0
  1002   001034  6E0C               	movwf	(_eusartRxLastError+1)^0,c	;volatile
  1003   001036  0E00               	movlw	0
  1004   001038  6E0B               	movwf	_eusartRxLastError^0,c	;volatile
  1005   00103A                     
  1006                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(RCSTAbits.OERR)
  1007   00103A  A2AB               	btfss	171,1,c	;volatile
  1008   00103C  EF22  F008         	goto	u31
  1009   001040  EF24  F008         	goto	u30
  1010   001044                     u31:
  1011   001044  EF3A  F008         	goto	l1112
  1012   001048                     u30:
  1013   001048                     
  1014                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
  1015   001048  840B               	bsf	_eusartRxLastError^0,2,c	;volatile
  1016   00104A                     
  1017                           ;mcc_generated_files/uart/src/eusart.c: 219:         if((0) != EUSART_OverrunErrorHandle
      +                          r)
  1018   00104A  5007               	movf	_EUSART_OverrunErrorHandler^0,w,c
  1019   00104C  1008               	iorwf	(_EUSART_OverrunErrorHandler+1)^0,w,c
  1020   00104E  B4D8               	btfsc	status,2,c
  1021   001050  EF2C  F008         	goto	u41
  1022   001054  EF2E  F008         	goto	u40
  1023   001058                     u41:
  1024   001058  EF3A  F008         	goto	l1112
  1025   00105C                     u40:
  1026   00105C                     
  1027                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
  1028   00105C  D802               	call	u58
  1029   00105E  EF3A  F008         	goto	u59
  1030   001062                     u58:
  1031   001062  0005               	push	
  1032   001064  6EFA               	movwf	pclath,c
  1033   001066  5007               	movf	_EUSART_OverrunErrorHandler^0,w,c
  1034   001068  6EFD               	movwf	tosl,c
  1035   00106A  5008               	movf	(_EUSART_OverrunErrorHandler+1)^0,w,c
  1036   00106C  6EFE               	movwf	tosh,c
  1037   00106E  6AFF               	clrf	tosu,c
  1038   001070  50FA               	movf	pclath,w,c
  1039   001072  0012               	return		;indir
  1040   001074                     u59:
  1041   001074                     l1112:
  1042                           
  1043                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(RCSTAbits.FERR)
  1044   001074  A4AB               	btfss	171,2,c	;volatile
  1045   001076  EF3F  F008         	goto	u61
  1046   00107A  EF41  F008         	goto	u60
  1047   00107E                     u61:
  1048   00107E  EF57  F008         	goto	l1120
  1049   001082                     u60:
  1050   001082                     
  1051                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
  1052   001082  820B               	bsf	_eusartRxLastError^0,1,c	;volatile
  1053   001084                     
  1054                           ;mcc_generated_files/uart/src/eusart.c: 227:         if((0) != EUSART_FramingErrorHandle
      +                          r)
  1055   001084  5009               	movf	_EUSART_FramingErrorHandler^0,w,c
  1056   001086  100A               	iorwf	(_EUSART_FramingErrorHandler+1)^0,w,c
  1057   001088  B4D8               	btfsc	status,2,c
  1058   00108A  EF49  F008         	goto	u71
  1059   00108E  EF4B  F008         	goto	u70
  1060   001092                     u71:
  1061   001092  EF57  F008         	goto	l1120
  1062   001096                     u70:
  1063   001096                     
  1064                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
  1065   001096  D802               	call	u88
  1066   001098  EF57  F008         	goto	u89
  1067   00109C                     u88:
  1068   00109C  0005               	push	
  1069   00109E  6EFA               	movwf	pclath,c
  1070   0010A0  5009               	movf	_EUSART_FramingErrorHandler^0,w,c
  1071   0010A2  6EFD               	movwf	tosl,c
  1072   0010A4  500A               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  1073   0010A6  6EFE               	movwf	tosh,c
  1074   0010A8  6AFF               	clrf	tosu,c
  1075   0010AA  50FA               	movf	pclath,w,c
  1076   0010AC  0012               	return		;indir
  1077   0010AE                     u89:
  1078   0010AE                     l1120:
  1079                           
  1080                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RCREG;
  1081   0010AE  50AE               	movf	174,w,c	;volatile
  1082   0010B0  0012               	return		;funcret
  1083   0010B2                     __end_of_EUSART_Read:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
  1087 ;; Defined at:
  1088 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		None
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_EUSART_Initialize
  1112 ;;		_EUSART_Read
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text13
  1117   00122C                     __ptext13:
  1118                           	callstack 0
  1119   00122C                     _EUSART_DefaultOverrunErrorCallback:
  1120                           	callstack 29
  1121   00122C                     
  1122                           ;mcc_generated_files/uart/src/eusart.c: 248:     RCSTAbits.CREN = 0;
  1123   00122C  98AB               	bcf	171,4,c	;volatile
  1124                           
  1125                           ;mcc_generated_files/uart/src/eusart.c: 249:     RCSTAbits.CREN = 1;
  1126   00122E  88AB               	bsf	171,4,c	;volatile
  1127   001230  0012               	return		;funcret
  1128   001232                     __end_of_EUSART_DefaultOverrunErrorCallback:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
  1132 ;; Defined at:
  1133 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		None
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_EUSART_Initialize
  1157 ;;		_EUSART_Read
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text14
  1162   001232                     __ptext14:
  1163                           	callstack 0
  1164   001232                     _EUSART_DefaultFramingErrorCallback:
  1165                           	callstack 29
  1166   001232  0012               	return		;funcret
  1167   001234                     __end_of_EUSART_DefaultFramingErrorCallback:
  1168                           	callstack 0
  1169                           
  1170                           	psect	rparam
  1171   000000                     
  1172                           	psect	config
  1173                           
  1174                           ; Padding undefined space
  1175   300000                     	org	3145728
  1176   300000  FF                 	db	255
  1177                           
  1178                           ;Config register CONFIG1H @ 0x300001
  1179                           ;	Oscillator Selection bits
  1180                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1181                           ;	Fail-Safe Clock Monitor Enable bit
  1182                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1183                           ;	Internal/External Oscillator Switchover bit
  1184                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1185   300001                     	org	3145729
  1186   300001  08                 	db	8
  1187                           
  1188                           ;Config register CONFIG2L @ 0x300002
  1189                           ;	Power-up Timer Enable bit
  1190                           ;	PWRTEN = OFF, PWRT disabled
  1191                           ;	Brown-out Reset Enable bits
  1192                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1193                           ;	Brown Out Reset Voltage bits
  1194                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1195   300002                     	org	3145730
  1196   300002  1F                 	db	31
  1197                           
  1198                           ;Config register CONFIG2H @ 0x300003
  1199                           ;	Watchdog Timer Enable bit
  1200                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1201                           ;	Watchdog Timer Postscale Select bits
  1202                           ;	WDTPS = 32768, 1:32768
  1203   300003                     	org	3145731
  1204   300003  1E                 	db	30
  1205                           
  1206                           ; Padding undefined space
  1207   300004                     	org	3145732
  1208   300004  FF                 	db	255
  1209                           
  1210                           ;Config register CONFIG3H @ 0x300005
  1211                           ;	CCP2 MUX bit
  1212                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1213                           ;	PORTB A/D Enable bit
  1214                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1215                           ;	Low-Power Timer1 Oscillator Enable bit
  1216                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1217                           ;	HFINTOSC Fast Start-up
  1218                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1219                           ;	MCLR Pin Enable bit
  1220                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1221   300005                     	org	3145733
  1222   300005  89                 	db	137
  1223                           
  1224                           ;Config register CONFIG4L @ 0x300006
  1225                           ;	Stack Full/Underflow Reset Enable bit
  1226                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1227                           ;	Single-Supply ICSP Enable bit
  1228                           ;	LVP = ON, Single-Supply ICSP enabled
  1229                           ;	Extended Instruction Set Enable bit
  1230                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1231                           ;	Background Debugger Enable bit
  1232                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1233   300006                     	org	3145734
  1234   300006  85                 	db	133
  1235                           
  1236                           ; Padding undefined space
  1237   300007                     	org	3145735
  1238   300007  FF                 	db	255
  1239                           
  1240                           ;Config register CONFIG5L @ 0x300008
  1241                           ;	Code Protection Block 0
  1242                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1243                           ;	Code Protection Block 1
  1244                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1245                           ;	Code Protection Block 2
  1246                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1247                           ;	Code Protection Block 3
  1248                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1249   300008                     	org	3145736
  1250   300008  0F                 	db	15
  1251                           
  1252                           ;Config register CONFIG5H @ 0x300009
  1253                           ;	Boot Block Code Protection bit
  1254                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1255                           ;	Data EEPROM Code Protection bit
  1256                           ;	CPD = OFF, Data EEPROM not code-protected
  1257   300009                     	org	3145737
  1258   300009  C0                 	db	192
  1259                           
  1260                           ;Config register CONFIG6L @ 0x30000A
  1261                           ;	Write Protection Block 0
  1262                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1263                           ;	Write Protection Block 1
  1264                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1265                           ;	Write Protection Block 2
  1266                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1267                           ;	Write Protection Block 3
  1268                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1269   30000A                     	org	3145738
  1270   30000A  0F                 	db	15
  1271                           
  1272                           ;Config register CONFIG6H @ 0x30000B
  1273                           ;	Configuration Register Write Protection bit
  1274                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1275                           ;	Boot Block Write Protection bit
  1276                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1277                           ;	Data EEPROM Write Protection bit
  1278                           ;	WRTD = OFF, Data EEPROM not write-protected
  1279   30000B                     	org	3145739
  1280   30000B  E0                 	db	224
  1281                           
  1282                           ;Config register CONFIG7L @ 0x30000C
  1283                           ;	Table Read Protection Block 0
  1284                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1285                           ;	Table Read Protection Block 1
  1286                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1287                           ;	Table Read Protection Block 2
  1288                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1289                           ;	Table Read Protection Block 3
  1290                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1291   30000C                     	org	3145740
  1292   30000C  0F                 	db	15
  1293                           
  1294                           ;Config register CONFIG7H @ 0x30000D
  1295                           ;	Boot Block Table Read Protection bit
  1296                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1297   30000D                     	org	3145741
  1298   30000D  40                 	db	64
  1299                           tosu	equ	0xFFF
  1300                           tosh	equ	0xFFE
  1301                           tosl	equ	0xFFD
  1302                           stkptr	equ	0xFFC
  1303                           pclatu	equ	0xFFB
  1304                           pclath	equ	0xFFA
  1305                           pcl	equ	0xFF9
  1306                           tblptru	equ	0xFF8
  1307                           tblptrh	equ	0xFF7
  1308                           tblptrl	equ	0xFF6
  1309                           tablat	equ	0xFF5
  1310                           prodh	equ	0xFF4
  1311                           prodl	equ	0xFF3
  1312                           indf0	equ	0xFEF
  1313                           postinc0	equ	0xFEE
  1314                           postdec0	equ	0xFED
  1315                           preinc0	equ	0xFEC
  1316                           plusw0	equ	0xFEB
  1317                           fsr0h	equ	0xFEA
  1318                           fsr0l	equ	0xFE9
  1319                           wreg	equ	0xFE8
  1320                           indf1	equ	0xFE7
  1321                           postinc1	equ	0xFE6
  1322                           postdec1	equ	0xFE5
  1323                           preinc1	equ	0xFE4
  1324                           plusw1	equ	0xFE3
  1325                           fsr1h	equ	0xFE2
  1326                           fsr1l	equ	0xFE1
  1327                           bsr	equ	0xFE0
  1328                           indf2	equ	0xFDF
  1329                           postinc2	equ	0xFDE
  1330                           postdec2	equ	0xFDD
  1331                           preinc2	equ	0xFDC
  1332                           plusw2	equ	0xFDB
  1333                           fsr2h	equ	0xFDA
  1334                           fsr2l	equ	0xFD9
  1335                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    48
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    S209$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S209$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S209$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S209$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S209$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S209$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S209$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S209$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S209$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S209$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S209$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S209$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S209$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S209$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S209$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S209$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S209$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S209$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S209$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S209$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S209$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S209$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S209$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S209$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S209$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S209$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 


Critical Paths under _main in COMRAM

    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     549
                        _EUSART_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     534
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_Write
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       F       1       15.8%
BITBIGSFRhhlhhh     1C      0       0      38        0.0%
BITBIGSFRlll        1C      0       0      48        0.0%
BITBIGSFRhhlhl      17      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhlllh      C      0       0      42        0.0%
BITBIGSFRlh          9      0       0      46        0.0%
BITBIGSFRhhllhh      7      0       0      41        0.0%
BITBIGSFRhhllll      6      0       0      44        0.0%
BITBIGSFRhl          6      0       0      45        0.0%
BITBIGSFRhhllll      2      0       0      43        0.0%
BITBIGSFRhhlhhl      2      0       0      39        0.0%
BITBIGSFRllh         1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      12        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Mar 17 18:06:18 2024

                                                l31 10DE                                                  l24 10D2  
                                                l34 10E4                                                  l36 10E6  
                                                l28 10D8                                                  l53 11FA  
                                                l38 10E8                                                  l76 119E  
                                                u30 1048                                                  u31 1044  
                                                u40 105C                                                  u41 1058  
                                                u60 1082                                                  u61 107E  
                                                u70 1096                                                  u71 1092  
                                                u58 1062                                                  u59 1074  
                                                u88 109C                                                  u89 10AE  
       __end_of_EUSART_OverrunErrorCallbackRegister 11BC               ??_EUSART_OverrunErrorCallbackRegister 0010  
              ?_EUSART_OverrunErrorCallbackRegister 000E                 _EUSART_OverrunErrorCallbackRegister 11A0  
                                               l212 1232                                                 l206 10B0  
                                               l215 1230                                                 l223 11BA  
                                               l304 1222                                                 l144 1144  
                                               l209 122A                                                 l219 11D6  
                                               l281 120E                                                 l258 1178  
                                               l268 1218                                                 l294 1204  
                                               u200 11B2                                                 u201 11AE  
                                               u190 11CE                                                 u191 11CA  
                        ??_INT0_SetInterruptHandler 0010                                                 tosl 0FFD  
                                               wreg 0FE8                                        ?_EUSART_Read 000E  
                                              l1110 105C                                                l1102 1032  
                                              l1120 10AE                                                l1112 1074  
                                              l1104 103A                                                l1114 1082  
                                              l1106 1048                                                l1116 1084  
                                              l1108 104A                                                l1220 11CE  
                                              l1118 1096                                                l1222 11A0  
                                              l1230 11FC                                                l1070 1186  
                                              l1224 11B2                                                l1232 1110  
                                              l1240 114C                                                l1072 119C  
                                              l1066 121A                                                l1218 11BC  
                                              l1234 1124                                                l1226 1210  
                                              l1242 1158                                                l1250 11EA  
                                              l1092 122C                                                l1236 1130  
                                              l1228 1206                                                l1244 115A  
                                              l1068 117A                                                l1252 11F2  
                                              l1260 10BC                                                l1094 1226  
                                              l1246 1168                                                l1238 1146  
                                              l1254 11F6                                                l1262 10C2  
                                              l1248 116A                                                l1264 10C8  
                                              l1256 10B2                                                l1258 10B6  
                                              l1268 10EE                                                _IOCB 0F7D  
                                              _LATA 0F89                                                _LATB 0F8A  
                                              _LATC 0F8B                                                _WPUB 0F7C  
                                              _data 000D                                                _main 10B2  
                         ?_INT2_SetInterruptHandler 000E                                                start 0000  
        __end_of_EUSART_DefaultOverrunErrorCallback 1232                ??_EUSART_DefaultOverrunErrorCallback 000E  
               ?_EUSART_DefaultOverrunErrorCallback 000E                  _EUSART_DefaultOverrunErrorCallback 122C  
                                      ___param_bank 0000                                       ?_EUSART_Write 000E  
                                             ?_main 000E                                               _RCREG 0FAE  
                                             _RCSTA 0FAB                                               _UART1 1001  
                                             _SPBRG 0FAF                                               _TRISA 0F92  
                                             _TRISB 0F93                                               _TRISC 0F94  
                                             _TXREG 0FAD                                               _TXSTA 0FAC  
                          _INT1_SetInterruptHandler 1206                                               pclath 0FFA  
                                             status 0FD8                                     __initialization 11D8  
                                      __end_of_main 1110                                      ??_EUSART_Write 000E  
                                            ??_main 0010                                       __activetblptr 0003  
EUSART_OverrunErrorCallbackRegister@callbackHandler 000E  EUSART_FramingErrorCallbackRegister@callbackHandler 000E  
                        _EUSART_OverrunErrorHandler 0007                                              _ANSELH 0F7F  
                                            _OSCCON 0FD3                                              _SPBRGH 0FB0  
                                            clear_0 11DE                                              isa$std 0001  
                                 ?_CLOCK_Initialize 000E                        _INT2_DefaultInterruptHandler 0000  
                                ??_CLOCK_Initialize 000E                                        __mediumconst 0000  
          INT2_SetInterruptHandler@InterruptHandler 000E            INT1_SetInterruptHandler@InterruptHandler 000E  
          INT0_SetInterruptHandler@InterruptHandler 000E                                   _SYSTEM_Initialize 11EA  
                                        __accesstop 0060                             __end_of__initialization 11E4  
                                ?_SYSTEM_Initialize 000E                                       ___rparam_used 0001  
                                     __end_of_UART1 1031                                      __pcstackCOMRAM 000E  
                               ??_SYSTEM_Initialize 0010                    __end_of_INT2_SetInterruptHandler 1206  
                         __end_of_SYSTEM_Initialize 11FC                                __end_of_EUSART_Write 122C  
                             _INT0_InterruptHandler 0005                                _EUSART_AutoBaudQuery 0000  
                                           _BAUDCON 0FB8                                     _EUSART_IsTxDone 0000  
                        ??_INT1_SetInterruptHandler 0010                                     _EUSART_ErrorGet 0000  
                                           _OSCTUNE 0F9B                           ?_INT0_SetInterruptHandler 000E  
                                           __Hparam 0000                                             __Lparam 0000  
                                      __psmallconst 1000                                             __pcinit 11D8  
                                           __ramtop 1000                                             __ptext0 10B2  
                                           __ptext1 11EA                                             __ptext2 117A  
                                           __ptext3 1146                                             __ptext4 11FC  
                                           __ptext5 1206                                             __ptext6 1210  
                                           __ptext7 1110                                             __ptext8 11A0  
                                           __ptext9 11BC                            ??_PIN_MANAGER_Initialize 000E  
                              end_of_initialization 11E4                            _INT2_SetInterruptHandler 11FC  
                                 _EUSART_Initialize 1110                                  ?_EUSART_Initialize 000E  
                                         _RCSTAbits 0FAB                                             postinc0 0FEE  
                               ??_EUSART_Initialize 0010                               _INT1_InterruptHandler 0003  
                               _EUSART_Deinitialize 0000                           __end_of_EUSART_Initialize 1146  
                                         _TXSTAbits 0FAC                        __end_of_INTERRUPT_Initialize 117A  
                      _INT0_DefaultInterruptHandler 0000                                         _BAUDCONbits 0FB8  
                                      _EUSART_Write 1224                                 start_initialization 11D8  
                                     ??_EUSART_Read 000E                          _EUSART_FramingErrorHandler 0009  
                                       __pbssCOMRAM 0001                    __end_of_INT0_SetInterruptHandler 121A  
                             _INT2_InterruptHandler 0001                                 __end_of_EUSART_Read 10B2  
                            _PIN_MANAGER_Initialize 117A                                         __smallconst 1000  
                        ??_INT2_SetInterruptHandler 0010                              _EUSART_TransmitDisable 0000  
                                  _EUSART_IsRxReady 0000                                _INTERRUPT_Initialize 1146  
                                  _EUSART_IsTxReady 0000                                    _CLOCK_Initialize 121A  
                                          _LATBbits 0F8A                           ?_INT1_SetInterruptHandler 000E  
                                 _eusartRxLastError 000B                                            _PIR1bits 0F9E  
                                          _RCONbits 0FD0                                         _EUSART_Read 1032  
                                       _INTCON2bits 0FF1                                         _INTCON3bits 0FF0  
                             ?_INTERRUPT_Initialize 000E                            _INT0_SetInterruptHandler 1210  
                                          __Hrparam 0000                                            __Lrparam 0000  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 121A  
                                          __ptext11 1224                                            __ptext12 1032  
                                          __ptext13 122C                                            __ptext14 1232  
                             _EUSART_TransmitEnable 0000                                            isa$xinst 0000  
       __end_of_EUSART_FramingErrorCallbackRegister 11D8               ??_EUSART_FramingErrorCallbackRegister 0010  
              ?_EUSART_FramingErrorCallbackRegister 000E                 _EUSART_FramingErrorCallbackRegister 11BC  
                      _INT1_DefaultInterruptHandler 0000                                          _INTCONbits 0FF2  
                            ??_INTERRUPT_Initialize 0010                             ?_PIN_MANAGER_Initialize 000E  
        __end_of_EUSART_DefaultFramingErrorCallback 1234                ??_EUSART_DefaultFramingErrorCallback 000E  
               ?_EUSART_DefaultFramingErrorCallback 000E                  _EUSART_DefaultFramingErrorCallback 1232  
                          __end_of_CLOCK_Initialize 1224                    __end_of_INT1_SetInterruptHandler 1210  
                                EUSART_Write@txData 000E                      __end_of_PIN_MANAGER_Initialize 11A0  
