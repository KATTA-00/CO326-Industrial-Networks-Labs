

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Mar 17 18:50:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F26K20 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    61   000000                     
    62 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    63   000000                     
    64 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    65   000000                     _TXREG	set	4013
    66   000000                     _RCREG	set	4014
    67   000000                     _SPBRG	set	4015
    68   000000                     _TXSTA	set	4012
    69                           
    70                           	psect	nvCOMRAM
    71   000008                     __pnvCOMRAM:
    72                           	callstack 0
    73   000008                     _EUSART_ErrorHandler:
    74                           	callstack 0
    75   000008                     	ds	2
    76   00000A                     _EUSART_OverrunErrorHandler:
    77                           	callstack 0
    78   00000A                     	ds	2
    79   00000C                     _EUSART_FramingErrorHandler:
    80                           	callstack 0
    81   00000C                     	ds	2
    82   000000                     _LATB	set	3978
    83   000000                     _RCSTAbits	set	4011
    84   000000                     _TXSTAbits	set	4012
    85   000000                     _WPUB	set	3964
    86   000000                     _ANSEL	set	3966
    87   000000                     _LATA	set	3977
    88   000000                     _LATBbits	set	3978
    89   000000                     _TRISA	set	3986
    90   000000                     _LATC	set	3979
    91   000000                     _OSCTUNE	set	3995
    92   000000                     _PIR1bits	set	3998
    93   000000                     _RCSTA	set	4011
    94   000000                     _BAUDCON	set	4024
    95   000000                     _OSCCON	set	4051
    96   000000                     _SPBRGH	set	4016
    97   000000                     _INTCON2bits	set	4081
    98   000000                     _TRISC	set	3988
    99   000000                     _TRISB	set	3987
   100   000000                     _ANSELH	set	3967
   101   000000                     _INTCONbits	set	4082
   102                           
   103                           	psect	smallconst
   104   001000                     __psmallconst:
   105                           	callstack 0
   106   001000  00                 	db	0
   107   001001                     STR_2:
   108   001001  50                 	db	80	;'P'
   109   001002  72                 	db	114	;'r'
   110   001003  65                 	db	101	;'e'
   111   001004  73                 	db	115	;'s'
   112   001005  73                 	db	115	;'s'
   113   001006  20                 	db	32
   114   001007  31                 	db	49	;'1'
   115   001008  20                 	db	32
   116   001009  66                 	db	102	;'f'
   117   00100A  6F                 	db	111	;'o'
   118   00100B  72                 	db	114	;'r'
   119   00100C  20                 	db	32
   120   00100D  52                 	db	82	;'R'
   121   00100E  65                 	db	101	;'e'
   122   00100F  64                 	db	100	;'d'
   123   001010  2C                 	db	44
   124   001011  20                 	db	32
   125   001012  32                 	db	50	;'2'
   126   001013  20                 	db	32
   127   001014  66                 	db	102	;'f'
   128   001015  6F                 	db	111	;'o'
   129   001016  72                 	db	114	;'r'
   130   001017  20                 	db	32
   131   001018  59                 	db	89	;'Y'
   132   001019  65                 	db	101	;'e'
   133   00101A  6C                 	db	108	;'l'
   134   00101B  6C                 	db	108	;'l'
   135   00101C  6F                 	db	111	;'o'
   136   00101D  77                 	db	119	;'w'
   137   00101E  2C                 	db	44
   138   00101F  20                 	db	32
   139   001020  33                 	db	51	;'3'
   140   001021  20                 	db	32
   141   001022  66                 	db	102	;'f'
   142   001023  6F                 	db	111	;'o'
   143   001024  72                 	db	114	;'r'
   144   001025  20                 	db	32
   145   001026  47                 	db	71	;'G'
   146   001027  72                 	db	114	;'r'
   147   001028  65                 	db	101	;'e'
   148   001029  65                 	db	101	;'e'
   149   00102A  6E                 	db	110	;'n'
   150   00102B  20                 	db	32
   151   00102C  2E                 	db	46
   152   00102D  2E                 	db	46
   153   00102E  2E                 	db	46
   154   00102F  20                 	db	32
   155   001030  0A                 	db	10
   156   001031  00                 	db	0
   157   001032                     STR_1:
   158   001032  57                 	db	87	;'W'
   159   001033  65                 	db	101	;'e'
   160   001034  6C                 	db	108	;'l'
   161   001035  63                 	db	99	;'c'
   162   001036  6F                 	db	111	;'o'
   163   001037  6D                 	db	109	;'m'
   164   001038  65                 	db	101	;'e'
   165   001039  20                 	db	32
   166   00103A  74                 	db	116	;'t'
   167   00103B  6F                 	db	111	;'o'
   168   00103C  20                 	db	32
   169   00103D  43                 	db	67	;'C'
   170   00103E  4F                 	db	79	;'O'
   171   00103F  33                 	db	51	;'3'
   172   001040  32                 	db	50	;'2'
   173   001041  36                 	db	54	;'6'
   174   001042  20                 	db	32
   175   001043  4C                 	db	76	;'L'
   176   001044  61                 	db	97	;'a'
   177   001045  62                 	db	98	;'b'
   178   001046  33                 	db	51	;'3'
   179   001047  00                 	db	0
   180   001048                     STR_3:
   181   001048  0A                 	db	10
   182   001049  20                 	db	32
   183   00104A  0D                 	db	13
   184   00104B  00                 	db	0
   185   00104C  00                 	db	0	; dummy byte at the end
   186   000000                     
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190   0011C4                     __pcinit:
   191                           	callstack 0
   192   0011C4                     start_initialization:
   193                           	callstack 0
   194   0011C4                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Clear objects allocated to COMRAM (2 bytes)
   198   0011C4  6A0F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   199   0011C6  6A0E               	clrf	__pbssCOMRAM& (0+255),c
   200   0011C8                     end_of_initialization:
   201                           	callstack 0
   202   0011C8                     __end_of__initialization:
   203                           	callstack 0
   204   0011C8  0100               	movlb	0
   205   0011CA  EF27  F008         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208   00000E                     __pbssCOMRAM:
   209                           	callstack 0
   210   00000E                     _eusartRxLastError:
   211                           	callstack 0
   212   00000E                     	ds	1
   213   00000F                     _data:
   214                           	callstack 0
   215   00000F                     	ds	1
   216                           
   217                           	psect	cstackCOMRAM
   218   000001                     __pcstackCOMRAM:
   219                           	callstack 0
   220   000001                     EUSART_Write@txData:
   221                           	callstack 0
   222   000001                     EUSART_SetFramingErrorHandler@interruptHandler:
   223                           	callstack 0
   224   000001                     EUSART_SetOverrunErrorHandler@interruptHandler:
   225                           	callstack 0
   226   000001                     EUSART_SetErrorHandler@interruptHandler:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x0
   230   000001                     	ds	1
   231   000002                     send_string@x:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x1
   235   000002                     	ds	1
   236   000003                     ??_main:
   237   000003                     
   238                           ; 1 bytes @ 0x2
   239   000003                     	ds	2
   240   000005                     main@welcome_msg1:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x4
   244   000005                     	ds	1
   245   000006                     main@welcome_msg2:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x5
   249   000006                     	ds	1
   250   000007                     main@add_line:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x6
   254   000007                     	ds	1
   255                           
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 58 in file "main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  add_line        1    6[COMRAM] PTR unsigned char 
   266 ;;		 -> STR_3(4), 
   267 ;;  welcome_msg2    1    5[COMRAM] PTR unsigned char 
   268 ;;		 -> STR_2(49), 
   269 ;;  welcome_msg1    1    4[COMRAM] PTR unsigned char 
   270 ;;		 -> STR_1(22), 
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   283 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   284 ;;Total ram usage:        5 bytes
   285 ;; Hardware stack levels required when called: 3
   286 ;; This function calls:
   287 ;;		_EUSART_Read
   288 ;;		_SYSTEM_Initialize
   289 ;;		_send_string
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296   00104E                     __ptext0:
   297                           	callstack 0
   298   00104E                     _main:
   299                           	callstack 28
   300   00104E                     
   301                           ;main.c: 61:     SYSTEM_Initialize();
   302   00104E  ECDB  F008         	call	_SYSTEM_Initialize	;wreg free
   303   001052                     
   304                           ;main.c: 79:     char * welcome_msg1= "Welcome to CO326 Lab3";
   305   001052  0E32               	movlw	low STR_1
   306   001054  6E05               	movwf	main@welcome_msg1^0,c
   307   001056                     
   308                           ;main.c: 80:     char * welcome_msg2= "Press 1 for Red, 2 for Yellow, 3 for Green ... \n
      +                          ";
   309   001056  0E01               	movlw	low STR_2
   310   001058  6E06               	movwf	main@welcome_msg2^0,c
   311   00105A                     
   312                           ;main.c: 81:     char * add_line="\n \r";
   313   00105A  0E48               	movlw	low STR_3
   314   00105C  6E07               	movwf	main@add_line^0,c
   315   00105E                     
   316                           ;main.c: 84:     send_string(welcome_msg1);
   317   00105E  C005  F002         	movff	main@welcome_msg1,send_string@x
   318   001062  EC8D  F008         	call	_send_string	;wreg free
   319   001066                     
   320                           ;main.c: 85:     send_string(add_line);
   321   001066  C007  F002         	movff	main@add_line,send_string@x
   322   00106A  EC8D  F008         	call	_send_string	;wreg free
   323   00106E                     
   324                           ;main.c: 86:     _delay((unsigned long)((500)*(8000000/4000.0)));
   325   00106E  0E06               	movlw	6
   326   001070  6E04               	movwf	(??_main+1)^0,c
   327   001072  0E13               	movlw	19
   328   001074  6E03               	movwf	??_main^0,c
   329   001076  0EAE               	movlw	174
   330   001078                     u87:
   331   001078  2EE8               	decfsz	wreg,f,c
   332   00107A  D7FE               	bra	u87
   333   00107C  2E03               	decfsz	??_main^0,f,c
   334   00107E  D7FC               	bra	u87
   335   001080  2E04               	decfsz	(??_main+1)^0,f,c
   336   001082  D7FA               	bra	u87
   337   001084                     
   338                           ;main.c: 87:     send_string(welcome_msg2);
   339   001084  C006  F002         	movff	main@welcome_msg2,send_string@x
   340   001088  EC8D  F008         	call	_send_string	;wreg free
   341   00108C                     
   342                           ;main.c: 88:     send_string(add_line);
   343   00108C  C007  F002         	movff	main@add_line,send_string@x
   344   001090  EC8D  F008         	call	_send_string	;wreg free
   345   001094                     l994:
   346                           
   347                           ;main.c: 91:     {;main.c: 93:         data=EUSART_Read();
   348   001094  ECA9  F008         	call	_EUSART_Read	;wreg free
   349   001098  6E0F               	movwf	_data^0,c
   350                           
   351                           ;main.c: 96:         switch (data) {
   352   00109A  EF5D  F008         	goto	l998
   353   00109E                     l26:
   354   00109E  808A               	bsf	138,0,c	;volatile
   355   0010A0  EF4A  F008         	goto	l994
   356   0010A4                     l30:
   357   0010A4  848A               	bsf	138,2,c	;volatile
   358   0010A6  EF4A  F008         	goto	l994
   359   0010AA                     l33:
   360   0010AA  828A               	bsf	138,1,c	;volatile
   361   0010AC  EF4A  F008         	goto	l994
   362   0010B0                     l36:
   363   0010B0  908A               	bcf	138,0,c	;volatile
   364   0010B2  948A               	bcf	138,2,c	;volatile
   365   0010B4  928A               	bcf	138,1,c	;volatile
   366   0010B6  EF4A  F008         	goto	l994
   367   0010BA                     l998:
   368   0010BA  500F               	movf	_data^0,w,c
   369                           
   370                           ; Switch size 1, requested type "simple"
   371                           ; Number of cases is 3, Range of values is 49 to 51
   372                           ; switch strategies available:
   373                           ; Name         Instructions Cycles
   374                           ; simple_byte           10     6 (average)
   375                           ;	Chosen strategy is simple_byte
   376   0010BC  0A31               	xorlw	49	; case 49
   377   0010BE  B4D8               	btfsc	status,2,c
   378   0010C0  EF4F  F008         	goto	l26
   379   0010C4  0A03               	xorlw	3	; case 50
   380   0010C6  B4D8               	btfsc	status,2,c
   381   0010C8  EF52  F008         	goto	l30
   382   0010CC  0A01               	xorlw	1	; case 51
   383   0010CE  B4D8               	btfsc	status,2,c
   384   0010D0  EF55  F008         	goto	l33
   385   0010D4  EF58  F008         	goto	l36
   386   0010D8  EF00  F000         	goto	start
   387   0010DC                     __end_of_main:
   388                           	callstack 0
   389                           
   390 ;; *************** function _send_string *****************
   391 ;; Defined at:
   392 ;;		line 52 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  x               1    1[COMRAM] PTR const unsigned char 
   395 ;;		 -> STR_3(4), STR_2(49), STR_1(22), 
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   407 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;Total ram usage:        1 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; Hardware stack levels required when called: 1
   414 ;; This function calls:
   415 ;;		_EUSART_Write
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text1
   422   00111A                     __ptext1:
   423                           	callstack 0
   424   00111A                     _send_string:
   425                           	callstack 29
   426   00111A                     
   427                           ;main.c: 53:     while (*x){
   428   00111A  EF99  F008         	goto	l970
   429   00111E                     l966:
   430                           
   431                           ;main.c: 54:     EUSART_Write(*x++);
   432   00111E  C002  FFF6         	movff	send_string@x,tblptrl
   433   001122                     	if	1	;There is more than 1 active tblptr byte
   434   001122  0E10               	movlw	high __smallconst
   435   001124  6EF7               	movwf	tblptrh,c
   436   001126                     	endif
   437   001126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   438   001126  6AF8               	clrf	tblptru,c
   439   001128                     	endif
   440   001128                     	if	0	;tblptru may be non-zero
   441   001128                     	endif
   442   001128  0008               	tblrd		*
   443   00112A  50F5               	movf	tablat,w,c
   444   00112C  ECD0  F008         	call	_EUSART_Write
   445   001130  2A02               	incf	send_string@x^0,f,c
   446   001132                     l970:
   447                           
   448                           ;main.c: 53:     while (*x){
   449   001132  C002  FFF6         	movff	send_string@x,tblptrl
   450   001136                     	if	1	;There is more than 1 active tblptr byte
   451   001136  0E10               	movlw	high __smallconst
   452   001138  6EF7               	movwf	tblptrh,c
   453   00113A                     	endif
   454   00113A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   455   00113A  6AF8               	clrf	tblptru,c
   456   00113C                     	endif
   457   00113C                     	if	0	;tblptru may be non-zero
   458   00113C                     	endif
   459   00113C  0008               	tblrd		*
   460   00113E  50F5               	movf	tablat,w,c
   461   001140  0900               	iorlw	0
   462   001142  A4D8               	btfss	status,2,c
   463   001144  EFA6  F008         	goto	u71
   464   001148  EFA8  F008         	goto	u70
   465   00114C                     u71:
   466   00114C  EF8F  F008         	goto	l966
   467   001150                     u70:
   468   001150  0012               	return		;funcret
   469   001152                     __end_of_send_string:
   470                           	callstack 0
   471                           
   472 ;; *************** function _EUSART_Write *****************
   473 ;; Defined at:
   474 ;;		line 132 in file "mcc_generated_files/eusart.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  txData          1    wreg     unsigned char 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  txData          1    0[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;Total ram usage:        1 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_send_string
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text2
   502   0011A0                     __ptext2:
   503                           	callstack 0
   504   0011A0                     _EUSART_Write:
   505                           	callstack 29
   506                           
   507                           ;incstack = 0
   508                           ;EUSART_Write@txData stored from wreg
   509   0011A0  6E01               	movwf	EUSART_Write@txData^0,c
   510   0011A2                     l111:
   511                           
   512                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
   513   0011A2  A89E               	btfss	158,4,c	;volatile
   514   0011A4  EFD6  F008         	goto	u11
   515   0011A8  EFD8  F008         	goto	u10
   516   0011AC                     u11:
   517   0011AC  EFD1  F008         	goto	l111
   518   0011B0                     u10:
   519   0011B0                     
   520                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
   521   0011B0  C001  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   522   0011B4  0012               	return		;funcret
   523   0011B6                     __end_of_EUSART_Write:
   524                           	callstack 0
   525                           
   526 ;; *************** function _SYSTEM_Initialize *****************
   527 ;; Defined at:
   528 ;;		line 50 in file "mcc_generated_files/mcc.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 2
   549 ;; This function calls:
   550 ;;		_EUSART_Initialize
   551 ;;		_OSCILLATOR_Initialize
   552 ;;		_PIN_MANAGER_Initialize
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text3
   559   0011B6                     __ptext3:
   560                           	callstack 0
   561   0011B6                     _SYSTEM_Initialize:
   562                           	callstack 28
   563   0011B6                     
   564                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   565   0011B6  ECBD  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   566                           
   567                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   568   0011BA  ECE7  F008         	call	_OSCILLATOR_Initialize	;wreg free
   569   0011BE                     
   570                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
   571   0011BE  EC6E  F008         	call	_EUSART_Initialize	;wreg free
   572   0011C2  0012               	return		;funcret
   573   0011C4                     __end_of_SYSTEM_Initialize:
   574                           	callstack 0
   575                           
   576 ;; *************** function _PIN_MANAGER_Initialize *****************
   577 ;; Defined at:
   578 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_SYSTEM_Initialize
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text4
   606   00117A                     __ptext4:
   607                           	callstack 0
   608   00117A                     _PIN_MANAGER_Initialize:
   609                           	callstack 29
   610   00117A                     
   611                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   612   00117A  0E00               	movlw	0
   613   00117C  6E89               	movwf	137,c	;volatile
   614                           
   615                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   616   00117E  0E00               	movlw	0
   617   001180  6E8A               	movwf	138,c	;volatile
   618                           
   619                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   620   001182  0E00               	movlw	0
   621   001184  6E8B               	movwf	139,c	;volatile
   622   001186                     
   623                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   624   001186  6892               	setf	146,c	;volatile
   625                           
   626                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF8;
   627   001188  0EF8               	movlw	248
   628   00118A  6E93               	movwf	147,c	;volatile
   629                           
   630                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   631   00118C  0EBF               	movlw	191
   632   00118E  6E94               	movwf	148,c	;volatile
   633                           
   634                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x1F;
   635   001190  0E1F               	movlw	31
   636   001192  6E7E               	movwf	126,c	;volatile
   637                           
   638                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
   639   001194  0E1F               	movlw	31
   640   001196  6E7F               	movwf	127,c	;volatile
   641                           
   642                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
   643   001198  0E00               	movlw	0
   644   00119A  6E7C               	movwf	124,c	;volatile
   645   00119C                     
   646                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
   647   00119C  8EF1               	bsf	241,7,c	;volatile
   648   00119E  0012               	return		;funcret
   649   0011A0                     __end_of_PIN_MANAGER_Initialize:
   650                           	callstack 0
   651                           
   652 ;; *************** function _OSCILLATOR_Initialize *****************
   653 ;; Defined at:
   654 ;;		line 58 in file "mcc_generated_files/mcc.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_SYSTEM_Initialize
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text5
   682   0011CE                     __ptext5:
   683                           	callstack 0
   684   0011CE                     _OSCILLATOR_Initialize:
   685                           	callstack 29
   686   0011CE                     
   687                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x62;
   688   0011CE  0E62               	movlw	98
   689   0011D0  6ED3               	movwf	211,c	;volatile
   690                           
   691                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
   692   0011D2  0E00               	movlw	0
   693   0011D4  6E9B               	movwf	155,c	;volatile
   694   0011D6  0012               	return		;funcret
   695   0011D8                     __end_of_OSCILLATOR_Initialize:
   696                           	callstack 0
   697                           
   698 ;; *************** function _EUSART_Initialize *****************
   699 ;; Defined at:
   700 ;;		line 66 in file "mcc_generated_files/eusart.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; Hardware stack levels required when called: 1
   721 ;; This function calls:
   722 ;;		_EUSART_SetErrorHandler
   723 ;;		_EUSART_SetFramingErrorHandler
   724 ;;		_EUSART_SetOverrunErrorHandler
   725 ;; This function is called by:
   726 ;;		_SYSTEM_Initialize
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text6
   731   0010DC                     __ptext6:
   732                           	callstack 0
   733   0010DC                     _EUSART_Initialize:
   734                           	callstack 28
   735   0010DC                     
   736                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
   737   0010DC  0E08               	movlw	8
   738   0010DE  6EB8               	movwf	184,c	;volatile
   739                           
   740                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
   741   0010E0  0E90               	movlw	144
   742   0010E2  6EAB               	movwf	171,c	;volatile
   743                           
   744                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
   745   0010E4  0E24               	movlw	36
   746   0010E6  6EAC               	movwf	172,c	;volatile
   747                           
   748                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xCF;
   749   0010E8  0ECF               	movlw	207
   750   0010EA  6EAF               	movwf	175,c	;volatile
   751                           
   752                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
   753   0010EC  0E00               	movlw	0
   754   0010EE  6EB0               	movwf	176,c	;volatile
   755   0010F0                     
   756                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   757   0010F0  0E00               	movlw	0
   758   0010F2  6E01               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   759   0010F4  0E00               	movlw	0
   760   0010F6  6E02               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   761   0010F8  ECF1  F008         	call	_EUSART_SetFramingErrorHandler	;wreg free
   762   0010FC                     
   763                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   764   0010FC  0E00               	movlw	0
   765   0010FE  6E01               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   766   001100  0E00               	movlw	0
   767   001102  6E02               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   768   001104  ECEC  F008         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   769   001108                     
   770                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   771   001108  0E00               	movlw	0
   772   00110A  6E01               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   773   00110C  0E00               	movlw	0
   774   00110E  6E02               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   775   001110  ECF6  F008         	call	_EUSART_SetErrorHandler	;wreg free
   776   001114                     
   777                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
   778   001114  0E00               	movlw	0
   779   001116  6E0E               	movwf	_eusartRxLastError^0,c	;volatile
   780   001118  0012               	return		;funcret
   781   00111A                     __end_of_EUSART_Initialize:
   782                           	callstack 0
   783                           
   784 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
   785 ;; Defined at:
   786 ;;		line 161 in file "mcc_generated_files/eusart.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   789 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;Total ram usage:        2 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_EUSART_Initialize
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text7
   815   0011D8                     __ptext7:
   816                           	callstack 0
   817   0011D8                     _EUSART_SetOverrunErrorHandler:
   818                           	callstack 28
   819   0011D8                     
   820                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
   821   0011D8  C001  F00A         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
   822   0011DC  C002  F00B         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
   823   0011E0  0012               	return		;funcret
   824   0011E2                     __end_of_EUSART_SetOverrunErrorHandler:
   825                           	callstack 0
   826                           
   827 ;; *************** function _EUSART_SetFramingErrorHandler *****************
   828 ;; Defined at:
   829 ;;		line 157 in file "mcc_generated_files/eusart.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   832 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        2 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_EUSART_Initialize
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text8
   858   0011E2                     __ptext8:
   859                           	callstack 0
   860   0011E2                     _EUSART_SetFramingErrorHandler:
   861                           	callstack 28
   862   0011E2                     
   863                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
   864   0011E2  C001  F00C         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
   865   0011E6  C002  F00D         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
   866   0011EA  0012               	return		;funcret
   867   0011EC                     __end_of_EUSART_SetFramingErrorHandler:
   868                           	callstack 0
   869                           
   870 ;; *************** function _EUSART_SetErrorHandler *****************
   871 ;; Defined at:
   872 ;;		line 165 in file "mcc_generated_files/eusart.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   875 ;;		 -> EUSART_DefaultErrorHandler(1), 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;Total ram usage:        2 bytes
   892 ;; Hardware stack levels used: 1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_EUSART_Initialize
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text9
   901   0011EC                     __ptext9:
   902                           	callstack 0
   903   0011EC                     _EUSART_SetErrorHandler:
   904                           	callstack 28
   905   0011EC                     
   906                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
   907   0011EC  C001  F008         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
   908   0011F0  C002  F009         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
   909   0011F4  0012               	return		;funcret
   910   0011F6                     __end_of_EUSART_SetErrorHandler:
   911                           	callstack 0
   912                           
   913 ;; *************** function _EUSART_Read *****************
   914 ;; Defined at:
   915 ;;		line 113 in file "mcc_generated_files/eusart.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      unsigned char 
   922 ;; Registers used:
   923 ;;		wreg, status,2
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text10
   943   001152                     __ptext10:
   944                           	callstack 0
   945   001152                     _EUSART_Read:
   946                           	callstack 30
   947   001152                     l104:
   948                           
   949                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RC1IF)
   950   001152  AA9E               	btfss	158,5,c	;volatile
   951   001154  EFAE  F008         	goto	u31
   952   001158  EFB0  F008         	goto	u30
   953   00115C                     u31:
   954   00115C  EFA9  F008         	goto	l104
   955   001160                     u30:
   956   001160                     
   957                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
   958   001160  0E00               	movlw	0
   959   001162  6E0E               	movwf	_eusartRxLastError^0,c	;volatile
   960   001164                     
   961                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
   962   001164  A2AB               	btfss	171,1,c	;volatile
   963   001166  EFB7  F008         	goto	u41
   964   00116A  EFB9  F008         	goto	u40
   965   00116E                     u41:
   966   00116E  EFBB  F008         	goto	l900
   967   001172                     u40:
   968   001172                     
   969                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
   970   001172  98AB               	bcf	171,4,c	;volatile
   971                           
   972                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
   973   001174  88AB               	bsf	171,4,c	;volatile
   974   001176                     l900:
   975                           
   976                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
   977   001176  50AE               	movf	174,w,c	;volatile
   978   001178  0012               	return		;funcret
   979   00117A                     __end_of_EUSART_Read:
   980                           	callstack 0
   981                           
   982                           	psect	rparam
   983   000000                     
   984                           	psect	config
   985                           
   986                           ; Padding undefined space
   987   300000                     	org	3145728
   988   300000  FF                 	db	255
   989                           
   990                           ;Config register CONFIG1H @ 0x300001
   991                           ;	Oscillator Selection bits
   992                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   993                           ;	Fail-Safe Clock Monitor Enable bit
   994                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   995                           ;	Internal/External Oscillator Switchover bit
   996                           ;	IESO = OFF, Oscillator Switchover mode disabled
   997   300001                     	org	3145729
   998   300001  08                 	db	8
   999                           
  1000                           ;Config register CONFIG2L @ 0x300002
  1001                           ;	Power-up Timer Enable bit
  1002                           ;	PWRTEN = OFF, PWRT disabled
  1003                           ;	Brown-out Reset Enable bits
  1004                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1005                           ;	Brown Out Reset Voltage bits
  1006                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1007   300002                     	org	3145730
  1008   300002  1F                 	db	31
  1009                           
  1010                           ;Config register CONFIG2H @ 0x300003
  1011                           ;	Watchdog Timer Enable bit
  1012                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1013                           ;	Watchdog Timer Postscale Select bits
  1014                           ;	WDTPS = 32768, 1:32768
  1015   300003                     	org	3145731
  1016   300003  1E                 	db	30
  1017                           
  1018                           ; Padding undefined space
  1019   300004                     	org	3145732
  1020   300004  FF                 	db	255
  1021                           
  1022                           ;Config register CONFIG3H @ 0x300005
  1023                           ;	CCP2 MUX bit
  1024                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1025                           ;	PORTB A/D Enable bit
  1026                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1027                           ;	Low-Power Timer1 Oscillator Enable bit
  1028                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1029                           ;	HFINTOSC Fast Start-up
  1030                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1031                           ;	MCLR Pin Enable bit
  1032                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1033   300005                     	org	3145733
  1034   300005  89                 	db	137
  1035                           
  1036                           ;Config register CONFIG4L @ 0x300006
  1037                           ;	Stack Full/Underflow Reset Enable bit
  1038                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1039                           ;	Single-Supply ICSP Enable bit
  1040                           ;	LVP = ON, Single-Supply ICSP enabled
  1041                           ;	Extended Instruction Set Enable bit
  1042                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1043                           ;	Background Debugger Enable bit
  1044                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1045   300006                     	org	3145734
  1046   300006  85                 	db	133
  1047                           
  1048                           ; Padding undefined space
  1049   300007                     	org	3145735
  1050   300007  FF                 	db	255
  1051                           
  1052                           ;Config register CONFIG5L @ 0x300008
  1053                           ;	Code Protection Block 0
  1054                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1055                           ;	Code Protection Block 1
  1056                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1057                           ;	Code Protection Block 2
  1058                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1059                           ;	Code Protection Block 3
  1060                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1061   300008                     	org	3145736
  1062   300008  0F                 	db	15
  1063                           
  1064                           ;Config register CONFIG5H @ 0x300009
  1065                           ;	Boot Block Code Protection bit
  1066                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1067                           ;	Data EEPROM Code Protection bit
  1068                           ;	CPD = OFF, Data EEPROM not code-protected
  1069   300009                     	org	3145737
  1070   300009  C0                 	db	192
  1071                           
  1072                           ;Config register CONFIG6L @ 0x30000A
  1073                           ;	Write Protection Block 0
  1074                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1075                           ;	Write Protection Block 1
  1076                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1077                           ;	Write Protection Block 2
  1078                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1079                           ;	Write Protection Block 3
  1080                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1081   30000A                     	org	3145738
  1082   30000A  0F                 	db	15
  1083                           
  1084                           ;Config register CONFIG6H @ 0x30000B
  1085                           ;	Configuration Register Write Protection bit
  1086                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1087                           ;	Boot Block Write Protection bit
  1088                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1089                           ;	Data EEPROM Write Protection bit
  1090                           ;	WRTD = OFF, Data EEPROM not write-protected
  1091   30000B                     	org	3145739
  1092   30000B  E0                 	db	224
  1093                           
  1094                           ;Config register CONFIG7L @ 0x30000C
  1095                           ;	Table Read Protection Block 0
  1096                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1097                           ;	Table Read Protection Block 1
  1098                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1099                           ;	Table Read Protection Block 2
  1100                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1101                           ;	Table Read Protection Block 3
  1102                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1103   30000C                     	org	3145740
  1104   30000C  0F                 	db	15
  1105                           
  1106                           ;Config register CONFIG7H @ 0x30000D
  1107                           ;	Boot Block Table Read Protection bit
  1108                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1109   30000D                     	org	3145741
  1110   30000D  40                 	db	64
  1111                           tosu	equ	0xFFF
  1112                           tosh	equ	0xFFE
  1113                           tosl	equ	0xFFD
  1114                           stkptr	equ	0xFFC
  1115                           pclatu	equ	0xFFB
  1116                           pclath	equ	0xFFA
  1117                           pcl	equ	0xFF9
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           prodh	equ	0xFF4
  1123                           prodl	equ	0xFF3
  1124                           indf0	equ	0xFEF
  1125                           postinc0	equ	0xFEE
  1126                           postdec0	equ	0xFED
  1127                           preinc0	equ	0xFEC
  1128                           plusw0	equ	0xFEB
  1129                           fsr0h	equ	0xFEA
  1130                           fsr0l	equ	0xFE9
  1131                           wreg	equ	0xFE8
  1132                           indf1	equ	0xFE7
  1133                           postinc1	equ	0xFE6
  1134                           postdec1	equ	0xFE5
  1135                           preinc1	equ	0xFE4
  1136                           plusw1	equ	0xFE3
  1137                           fsr1h	equ	0xFE2
  1138                           fsr1l	equ	0xFE1
  1139                           bsr	equ	0xFE0
  1140                           indf2	equ	0xFDF
  1141                           postinc2	equ	0xFDE
  1142                           postdec2	equ	0xFDD
  1143                           preinc2	equ	0xFDC
  1144                           plusw2	equ	0xFDB
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8

Data Sizes:
    Strings     75
    Constant    0
    Data        0
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    main@add_line	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), 

    main@welcome_msg1	PTR unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[22]), 

    main@welcome_msg2	PTR unsigned char  size(1) Largest target is 49
		 -> STR_2(CODE[49]), 

    send_string@x	PTR const unsigned char  size(1) Largest target is 49
		 -> STR_1(CODE[22]), STR_2(CODE[49]), STR_3(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_send_string
    _send_string->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     749
                                              2 COMRAM     5     5      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          1     0      1     364
                                              1 COMRAM     1     0      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_string
     _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       F       1       15.8%
BITBIGSFRhhhl       1D      0       0      37        0.0%
BITBIGSFRlll        1C      0       0      46        0.0%
BITBIGSFRhhl        1A      0       0      38        0.0%
BITBIGSFRhhhh        D      0       0      36        0.0%
BITBIGSFRhllh        C      0       0      40        0.0%
BITBIGSFRlh          9      0       0      44        0.0%
BITBIGSFRhlhh        7      0       0      39        0.0%
BITBIGSFRhllllh      6      0       0      42        0.0%
BITBIGSFRhlllll      6      0       0      43        0.0%
BITBIGSFRhlllh       2      0       0      41        0.0%
BITBIGSFRllh         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      47        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Mar 17 18:50:45 2024

                                           l30 10A4                                             l40 10B4  
                                           l33 10AA                                             l18 1150  
                                           l26 109E                                             l36 10B0  
                                           l38 10B2                                             l87 1118  
                                           u10 11B0                                             u11 11AC  
                                           u30 1160                                             u31 115C  
                                           u40 1172                                             u41 116E  
                                           u70 1150                                             u71 114C  
                                           u87 1078                                            l111 11A2  
                                          l104 1152                                            l114 11B4  
                                          l108 1178                                            l132 11F4  
                                          l126 11EA                                            l129 11E0  
                                          l145 11C2                                            l148 11D6  
                                          l173 119E                                            l900 1176  
                                          l860 11B0                                            l950 11D8  
                                          l952 11EC                                            l960 1108  
                                          l872 117A                                            l962 1114  
                                          l954 10DC                                            l874 1186  
                                          l858 11A2                                            l970 1132  
                                          l892 1152                                            l948 11E2  
                                          l956 10F0                                            l876 119C  
                                          l972 11B6                                            l964 111A  
                                          l980 1056                                            l894 1160  
                                          l958 10FC                                            l878 11CE  
                                          l974 11BE                                            l966 111E  
                                          l990 1084                                            l982 105A  
                                          l896 1164                                            l968 1130  
                                          l992 108C                                            l984 105E  
                                          l976 104E                                            l898 1172  
                                          l994 1094                                            l986 1066  
                                          l978 1052                                            l988 106E  
                                          l998 10BA                 ?_EUSART_SetFramingErrorHandler 0001  
                                          wreg 0FE8                                   ?_EUSART_Read 0001  
                                         STR_1 1032                                           STR_2 1001  
                                         STR_3 1048                                           _LATA 0F89  
                                         _LATB 0F8A                                           _LATC 0F8B  
                                         _WPUB 0F7C                                           _data 000F  
                                         _main 104E                                           start 0000  
                                 main@add_line 0007                                   ___param_bank 0000  
                                ?_EUSART_Write 0001                  __end_of_OSCILLATOR_Initialize 11D8  
                                        ?_main 0001                                          _ANSEL 0F7E  
                                        _RCREG 0FAE                                          _RCSTA 0FAB  
                                        _SPBRG 0FAF                                          _TRISA 0F92  
                                        _TRISB 0F93                                          _TRISC 0F94  
                                        _TXREG 0FAD                                          _TXSTA 0FAC  
                                        tablat 0FF5                                          status 0FD8  
                              __initialization 11C4                                   __end_of_main 10DC  
                               ??_EUSART_Write 0001                                         ??_main 0003  
                                __activetblptr 0003              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 000A                                         _ANSELH 0F7F  
                                 ?_send_string 0002                                         _OSCCON 0FD3  
                                       _SPBRGH 0FB0                                         isa$std 0001  
                                 __mediumconst 0000                                         tblptrh 0FF7  
                                       tblptrl 0FF6                                         tblptru 0FF8  
                            _SYSTEM_Initialize 11B6                                     __accesstop 0060  
                      __end_of__initialization 11C8                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 0001                                 __pcstackCOMRAM 0001  
                          ??_SYSTEM_Initialize 0003                ??_EUSART_SetOverrunErrorHandler 0003  
                    __end_of_SYSTEM_Initialize 11C4                           __end_of_EUSART_Write 11B6  
                                   __pnvCOMRAM 0008                                        _BAUDCON 0FB8  
                                      _OSCTUNE 0F9B                       ??_EUSART_SetErrorHandler 0003  
                                      __Hparam 0000                                        __Lparam 0000  
                                 __psmallconst 1000                                        __pcinit 11C4  
                                      __ramtop 1000                                        __ptext0 104E  
                                      __ptext1 111A                                        __ptext2 11A0  
                                      __ptext3 11B6                                        __ptext4 117A  
                                      __ptext5 11CE                                        __ptext6 10DC  
                                      __ptext7 11D8                                        __ptext8 11E2  
                                      __ptext9 11EC                          _OSCILLATOR_Initialize 11CE  
                     ??_PIN_MANAGER_Initialize 0001                           end_of_initialization 11C8  
        __end_of_EUSART_SetOverrunErrorHandler 11E2                  _EUSART_SetOverrunErrorHandler 11D8  
                            _EUSART_Initialize 10DC                             ?_EUSART_Initialize 0001  
                                    _RCSTAbits 0FAB                            ??_EUSART_Initialize 0003  
                    __end_of_EUSART_Initialize 111A                                      _TXSTAbits 0FAC  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 11A0  
                       ?_OSCILLATOR_Initialize 0001                            start_initialization 11C4  
                                ??_EUSART_Read 0001                 ?_EUSART_SetOverrunErrorHandler 0001  
                   _EUSART_FramingErrorHandler 000C                         _EUSART_SetErrorHandler 11EC  
                                  __pbssCOMRAM 000E                            __end_of_EUSART_Read 117A  
                       _PIN_MANAGER_Initialize 117A                                    __smallconst 1000  
                                ??_send_string 0003         EUSART_SetErrorHandler@interruptHandler 0001  
                                     _LATBbits 0F8A                              _eusartRxLastError 000E  
                                     _PIR1bits 0F9E                ??_EUSART_SetFramingErrorHandler 0003  
            _EUSART_DefaultOverrunErrorHandler 0000                                    _EUSART_Read 1152  
                                  _INTCON2bits 0FF1                                       __Hrparam 0000  
                                 send_string@x 0002                            __end_of_send_string 1152  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0001  
                          _EUSART_ErrorHandler 0008                               main@welcome_msg1 0005  
                             main@welcome_msg2 0006                                       __ptext10 1152  
                      ?_EUSART_SetErrorHandler 0001  EUSART_SetOverrunErrorHandler@interruptHandler 0001  
                                     isa$xinst 0000          __end_of_EUSART_SetFramingErrorHandler 11EC  
                _EUSART_SetFramingErrorHandler 11E2                                     _INTCONbits 0FF2  
                                  _send_string 111A                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 11F6  EUSART_SetFramingErrorHandler@interruptHandler 0001  
                           EUSART_Write@txData 0001                 __end_of_PIN_MANAGER_Initialize 11A0  
